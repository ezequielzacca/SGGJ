<?php

namespace Gremio\AbmBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * DetalleCierreRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class DetalleCierreRepository extends EntityRepository {
	public function findRetenciones($lote, $reparticion, $ordenamiento,
			$seccion = null) {
		$em = $this->getEntityManager();
		$qb = $em->createQueryBuilder();

		$qb
				->select(
						array('sec.Descripcion seccion', 's.Legajo legajo',
								's.sexo sexo', 's.Apellido apellido',
								's.Nombres nombres',
								's.Num_Documento documento',
								'sum(d.importe_cuota) as importeCuota',
								'sec.id codigoSeccion'))
				->from('GremioAbmBundle:DetalleCierre', 'd')
				->join('d.socio', 's')->join('s.seccion', 'sec')
				->join('s.reparticion', 'r')->where('d.cierre = :lote')
				->andWhere('r.id = :paramRep');
		if ($seccion != null) {
			$qb->andWhere('sec.id = :paramSec');
		}

		$qb->groupBy('s')->orderBy($ordenamiento)->setParameter('lote', $lote);
		if ($seccion != null) {
			$qb->setParameter('paramSec', $seccion);
		}
		$qb->setParameter('paramRep', $reparticion);
		$query = $qb->getQuery();
		return $query->getArrayResult();

		/*  $texto = 'SELECT  sec.Descripcion seccion,s.Legajo,s.sexo,
		 *  s.Apellido,s.Nombres,s.Num_Documento, sum(d.importe_cuota)
		 *  as importeCuota FROM GremioAbmBundle:DetalleCierre d JOIN d.socio s
		 *  JOIN s.seccion sec WHERE d.cierre=:lote and sec.id = :paramSec
		 *  GROUP BY s ORDER BY sec.Descripcion ASC';
		 */ 

	}

	public function findRetencionesComercio($lote, $comercio = null,
			$rubro = null) {
		$em = $this->getEntityManager();
		$qb = $em->createQueryBuilder();

		$qb
				->select(
						array('p.razon_social comercio', 'p.id codigo',
								'p.comision porcentaje_comision',
								'sum(d.importe_cuota) compras',
								'sum(d.importe_cuota) * p.comision / 100 importe_comision',
								'sum(d.importe_cuota) * (100 - p.comision) / 100 importe_neto'))
				->from('GremioAbmBundle:DetalleCierre', 'd')
				->join('d.cuota', 'c')->join('c.emision', 'e')
				->join('e.proveedor', 'p')->join('p.rubro', 'r')
				->where('d.cierre = :lote');

		if ($rubro != null) {
			$qb->andWhere('r.id = :paramRubro');
		}
		if ($comercio != null) {
			$qb->andWhere('p.id = :paramComercio');
		}

		$qb->groupBy('p')
				//orderBy($ordenamiento)

				->setParameter('lote', $lote);
		if ($rubro != null) {
			$qb->setParameter('paramRubro', $rubro);
		}
		if ($comercio != null) {
			$qb->setParameter('paramComercio', $comercio);
		}
		$query = $qb->getQuery();
		return $query->getArrayResult();

		/*  $texto = 'SELECT  sec.Descripcion seccion,s.Legajo,s.sexo,
		 *  s.Apellido,s.Nombres,s.Num_Documento, sum(d.importe_cuota)
		 *  as importeCuota FROM GremioAbmBundle:DetalleCierre d JOIN d.socio s
		 *  JOIN s.seccion sec WHERE d.cierre=:lote and sec.id = :paramSec
		 *  GROUP BY s ORDER BY sec.Descripcion ASC';
		 */

	}

	public function findImportePago($lote, $comercio) {
		$em = $this->getEntityManager();
		$qb = $em->createQueryBuilder();

		$qb->select('sum(d.importe_cuota) * p.comision / 100 importe_comision')
				->from('GremioAbmBundle:DetalleCierre', 'd')
				->join('d.cuota', 'c')->join('c.emision', 'e')
				->join('e.proveedor', 'p')->join('p.rubro', 'r')
				->where('d.cierre = :lote')->andWhere('p.id = :paramComercio')
				->groupBy('p')->setParameter('lote', $lote)
				->setParameter('paramComercio', $comercio);

		$query = $qb->getQuery();
		try {
			return $query->getSingleScalarResult();
		} catch (\Doctrine\ORM\NoResultException $e) {

			return 0;
		}

		/*  $texto = 'SELECT  sec.Descripcion seccion,s.Legajo,s.sexo,
		 *  s.Apellido,s.Nombres,s.Num_Documento, sum(d.importe_cuota)
		 *  as importeCuota FROM GremioAbmBundle:DetalleCierre d JOIN d.socio s
		 *  JOIN s.seccion sec WHERE d.cierre=:lote and sec.id = :paramSec
		 *  GROUP BY s ORDER BY sec.Descripcion ASC';
		 */

	}

}
