<?php

namespace Gremio\SociosBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * EmisionRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class EmisionRepository extends EntityRepository {
	public function findUltimasDelSocio($socio_id) {
		$em = $this->getEntityManager();
		$consulta = $em
				->createQuery(
						'SELECT e FROM GremioSociosBundle:Emision e JOIN e.tipo_emision t 
                                      WHERE e.socio = :socio 
                                      AND e.fecha_validez > :vencimiento
                                      AND (e.codigo_aprovacion IS NULL OR t.descripcion = :tipo)
                                      AND e.fecha_anulacion is null
                                      ORDER BY e.fecha_emision DESC');
		$consulta->setMaxResults(5);
		$consulta->setParameter('socio', $socio_id);
		$consulta->setParameter('vencimiento', new \DateTime('today'));
		$consulta->setParameter('tipo', "Evento");
		return $consulta->getResult();

	}
	public function findEmitidas($desde, $hasta) {
		$em = $this->getEntityManager();
		$consulta = $em
				->createQuery(
						'SELECT e FROM GremioSociosBundle:Emision e
                                      WHERE e.fecha_emision BETWEEN ?1 AND ?2
                                      ORDER BY e.fecha_emision');
		$consulta->setParameter(1, $desde);
		$consulta->setParameter(2, $hasta);
		return $consulta->getResult();

	}
	public function findCantidadEmitidas($desde, $hasta, $tipo) {
		try {
			$em = $this->getEntityManager();
			$consulta = $em
					->createQuery(
							'SELECT count(e.id) cantidad FROM GremioSociosBundle:Emision e join e.tipo_emision t 
                                      WHERE e.fecha_emision BETWEEN ?1 AND ?2 
									  AND t.descripcion = ?3');
			$consulta->setParameter(1, $desde);
			$consulta->setParameter(2, $hasta);
			$consulta->setParameter(3, $tipo);
			return $consulta->getSingleScalarResult();
		} catch (\Doctrine\ORM\NoResultException $e) {

			return 0;
		}

	}
	public function findCantidadAnuladas($desde, $hasta, $tipo) {
		try {
			$em = $this->getEntityManager();
			$consulta = $em
			->createQuery(
					'SELECT count(e.id) cantidad FROM GremioSociosBundle:Emision e join e.tipo_emision t
                                      WHERE e.fecha_anulacion BETWEEN ?1 AND ?2 
									  AND t.descripcion = ?3');
			$consulta->setParameter(1, $desde);
			$consulta->setParameter(2, $hasta);
			$consulta->setParameter(3, $tipo);
			return $consulta->getSingleScalarResult();
		} catch (\Doctrine\ORM\NoResultException $e) {
	
			return 0;
		}
	
	}
	public function findAnuladas($desde, $hasta) {
		$em = $this->getEntityManager();
		$consulta = $em
				->createQuery(
						'SELECT e FROM GremioSociosBundle:Emision e
                                      WHERE e.fecha_anulacion BETWEEN ?1 AND ?2 Order by e.fecha_anulacion');
		$consulta->setParameter(1, $desde);
		$consulta->setParameter(2, $hasta);
		return $consulta->getResult();

	}

	public function findAutorizada($id) {
		$em = $this->getEntityManager();
		$consulta = $em
				->createQuery(
						'SELECT e FROM GremioSociosBundle:Emision e
                                      WHERE e.id = ?1 
                                      AND e.codigo_aprovacion IS NOT NULL');
		$consulta->setParameter(1, $id);
		return $consulta->getResult();

	}

	public function findUltimasAutorizadas($comercio) {
		$em = $this->getEntityManager();
		$qb = $em->createQueryBuilder();

		return $qb->select('e')->from('GremioSociosBundle:Emision', 'e')
				->join('e.proveedor', 'p')
				->where('p.id=:proveedor and e.codigo_aprovacion IS NOT NULL')
				->orderBy('e.fecha_aprovacion', 'DESC')
				->setParameter('proveedor', $comercio)->getQuery()->getResult();

		/*  $texto = 'SELECT  sec.Descripcion seccion,s.Legajo,s.sexo,
		 *  s.Apellido,s.Nombres,s.Num_Documento, sum(d.importe_cuota)
		 *  as importeCuota FROM GremioAbmBundle:DetalleCierre d JOIN d.socio s
		 *  JOIN s.seccion sec WHERE d.cierre=:lote and sec.id = :paramSec
		 *  GROUP BY s ORDER BY sec.Descripcion ASC';
		 */

	}
}
